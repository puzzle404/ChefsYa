"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _withDefaults = _interopRequireDefault(require("../utils/with-defaults"));

var _inputProps = require("./input-props");

var _passwordIcon = _interopRequireDefault(require("./password-icon"));

var _input = _interopRequireDefault(require("./input"));

var _clsx = _interopRequireDefault(require("../utils/clsx"));

var _assertion = require("../utils/assertion");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const passwordDefaultProps = { ..._inputProps.defaultProps,
  hideToggle: false,
  visibleIcon: /*#__PURE__*/(0, _jsxRuntime.jsx)(_passwordIcon.default, {
    visible: true
  }),
  hiddenIcon: /*#__PURE__*/(0, _jsxRuntime.jsx)(_passwordIcon.default, {
    visible: false
  })
};

const InputPassword = /*#__PURE__*/_react.default.forwardRef(({
  hideToggle,
  visibleIcon,
  hiddenIcon,
  children,
  ...props
}, ref) => {
  const inputRef = (0, _react.useRef)(null);
  const [visible, setVisible] = (0, _react.useState)(false);
  (0, _react.useImperativeHandle)(ref, () => inputRef.current);

  const iconClickHandler = () => {
    setVisible(v => !v);
  };

  const inputProps = (0, _react.useMemo)(() => ({ ...props,
    ref: inputRef,
    className: (0, _clsx.default)('nextui-input-password', props.className),
    contentClickable: true,
    onContentClick: iconClickHandler,
    type: visible ? 'text' : 'password'
  }), [props, iconClickHandler, visible, inputRef]);
  const icon = (0, _react.useMemo)(() => {
    if (hideToggle) return null;
    return visible ? visibleIcon : hiddenIcon;
  }, [hideToggle, visible, visibleIcon, hiddenIcon]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_input.default, {
    contentRight: icon,
    ...inputProps,
    children: children
  });
});

if (_assertion.__DEV__) {
  InputPassword.displayName = 'NextUI - Input Password';
}

InputPassword.toString = () => '.nextui-input-password';

var _default = (0, _withDefaults.default)(InputPassword, passwordDefaultProps);

exports.default = _default;
module.exports = exports.default;