"use strict";

exports.__esModule = true;
exports.default = void 0;

var _codes = require("./codes");

var _react = require("react");

var _helper = require("./helper");

const useKeyboard = (handler, keyBindings, options = {}) => {
  const bindings = Array.isArray(keyBindings) ? keyBindings : [keyBindings];
  const {
    disableGlobalEvent = false,
    capture = false,
    stopPropagation = false,
    preventDefault = false,
    event = 'keydown'
  } = options;
  const activeModMap = (0, _helper.getActiveModMap)(bindings);
  const keyCodes = bindings.filter(item => !_codes.KeyMod[item]);
  const {
    CtrlCmd,
    WinCtrl
  } = (0, _helper.getCtrlKeysByPlatform)();

  const eventHandler = event => {
    if (activeModMap.Shift && !event.shiftKey) return;
    if (activeModMap.Alt && !event.altKey) return;
    if (activeModMap.CtrlCmd && !event[CtrlCmd]) return;
    if (activeModMap.WinCtrl && !event[WinCtrl]) return;
    if (keyCodes.length > 0 && !keyCodes.includes(event.keyCode)) return;

    if (stopPropagation) {
      event.stopPropagation();
    }

    if (preventDefault) {
      event.preventDefault();
    }

    handler && handler(event);
  };

  (0, _react.useEffect)(() => {
    if (!disableGlobalEvent) {
      document.addEventListener(event, eventHandler);
    }

    return () => {
      document.removeEventListener(event, eventHandler);
    };
  }, [disableGlobalEvent]);

  const elementBindingHandler = (elementEventType, isCapture = false) => {
    if (elementEventType !== event) return () => {};
    if (isCapture !== capture) return () => {};
    return e => eventHandler(e);
  };

  return {
    bindings: {
      onKeyDown: elementBindingHandler('keydown'),
      onKeyDownCapture: elementBindingHandler('keydown', true),
      onKeyPress: elementBindingHandler('keypress'),
      onKeyPressCapture: elementBindingHandler('keypress', true),
      onKeyUp: elementBindingHandler('keyup'),
      onKeyUpCapture: elementBindingHandler('keyup', true)
    }
  };
};

var _default = useKeyboard;
exports.default = _default;
module.exports = exports.default;