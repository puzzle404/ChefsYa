"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = exports.StyledDrip = void 0;

var _react = _interopRequireWildcard(require("react"));

var _stitches = require("../theme/stitches.config");

var _withDefaults = _interopRequireDefault(require("../utils/with-defaults"));

var _clsx = _interopRequireDefault(require("../utils/clsx"));

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const defaultProps = {
  visible: false,
  x: 0,
  y: 0,
  className: ''
};
const expand = (0, _stitches.keyframes)({
  '0%': {
    opacity: 0,
    transform: 'scale(0.25)'
  },
  '30%': {
    opacity: 1
  },
  '80%': {
    opacity: 0.5
  },
  '100%': {
    transform: 'scale(28)',
    opacity: 0
  }
});
const StyledDrip = (0, _stitches.styled)('div', {
  position: 'absolute',
  left: 0,
  right: 0,
  top: 0,
  bottom: 0,
  '& svg': {
    position: 'absolute',
    animation: `350ms linear ${expand}`,
    animationFillMode: 'forwards',
    width: '$md',
    height: '$md'
  }
});
exports.StyledDrip = StyledDrip;

const Drip = ({
  visible,
  x,
  y,
  color,
  onCompleted,
  className,
  ...props
}) => {
  const dripRef = (0, _react.useRef)(null);
  const top = Number.isNaN(+y) ? 0 : y - 10;
  const left = Number.isNaN(+x) ? 0 : x - 10;
  (0, _react.useEffect)(() => {
    if (!dripRef.current) return;
    dripRef.current.addEventListener('animationend', onCompleted);
    return () => {
      if (!dripRef.current) return;
      dripRef.current.removeEventListener('animationend', onCompleted);
    };
  });
  if (!visible) return null;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(StyledDrip, {
    ref: dripRef,
    className: (0, _clsx.default)('nextui-drip', className),
    ...props,
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)("svg", {
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      style: {
        top,
        left
      },
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("g", {
        stroke: "none",
        strokeWidth: "1",
        fill: "none",
        fillRule: "evenodd",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("g", {
          className: "nextui-drip-filler",
          fill: color,
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("rect", {
            width: "100%",
            height: "100%",
            rx: "10"
          })
        })
      })
    })
  });
};

const MemoDrip = /*#__PURE__*/_react.default.memo(Drip);

var _default = (0, _withDefaults.default)(MemoDrip, defaultProps);

exports.default = _default;