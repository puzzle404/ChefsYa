"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = exports.StyledButtonGroup = void 0;

var _stitches = require("../theme/stitches.config");

var _button = _interopRequireDefault(require("./button.styles"));

const StyledButtonGroup = (0, _stitches.styled)('div', {
  display: 'inline-flex',
  margin: '$3',
  backgroundColor: 'transparent',
  height: 'min-content',
  [`& ${_button.default}`]: {
    '.nextui-button-text': {
      top: 0
    }
  },
  variants: {
    vertical: {
      true: {
        fd: 'column',
        [`& ${_button.default}`]: {
          '&:not(:first-child)': {
            btlr: 0,
            // top-left
            btrr: 0 // top-right

          },
          '&:not(:last-child)': {
            bblr: 0,
            bbrr: 0
          }
        }
      },
      false: {
        fd: 'row',
        [`& ${_button.default}`]: {
          '&:not(:first-child)': {
            btlr: 0,
            // top-left
            bblr: 0 // bottom-left

          },
          '&:not(:last-child)': {
            btrr: 0,
            // top-right
            bbrr: 0 // bottom-right

          }
        }
      }
    },
    size: {
      xs: {
        br: '$xs'
      },
      sm: {
        br: '$sm'
      },
      md: {
        br: '$md'
      },
      lg: {
        br: '$base'
      },
      xl: {
        br: '$xl'
      }
    },
    rounded: {
      true: {
        br: '$pill'
      }
    },
    bordered: {
      true: {
        bg: 'transparent'
      }
    },
    gradient: {
      true: {
        pl: 0
      }
    }
  },
  defaultVariants: {
    vertical: false
  },
  compoundVariants: [// bordered / vertical:true
  {
    bordered: true,
    vertical: true,
    css: {
      [`& ${_button.default}`]: {
        '&:not(:last-child)': {
          borderBottom: 'none',
          paddingBottom: '0'
        }
      }
    }
  }, // bordered / vertical:false
  {
    bordered: true,
    vertical: false,
    css: {
      [`& ${_button.default}`]: {
        '&:not(:first-child)': {
          borderLeft: 'none'
        }
      }
    }
  }, // gradient / vertical:false
  {
    gradient: true,
    vertical: false,
    css: {
      [`& ${_button.default}`]: {
        '&:not(:last-child)&:not(:first-child)': {
          pl: 0,
          filter: 'hue-rotate(310deg)'
        },
        '&:last-child': {
          pl: 0,
          filter: 'hue-rotate(250deg)'
        }
      }
    }
  }]
});
exports.StyledButtonGroup = StyledButtonGroup;
var _default = StyledButtonGroup;
exports.default = _default;