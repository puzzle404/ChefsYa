"use strict";

exports.__esModule = true;
exports.renameProp = exports.omitObject = exports.isObject = exports.copyObject = void 0;

const isObject = target => target && typeof target === 'object';

exports.isObject = isObject;

const renameProp = (oldProp, newProp, {
  [oldProp]: old,
  ...others
}) => ({
  [newProp]: old,
  ...others
}); // copy an object without reference


exports.renameProp = renameProp;

const copyObject = obj => {
  if (!isObject(obj)) return obj;
  if (obj instanceof Array) return [...obj];
  return { ...obj
  };
}; // copy an object omit some keys


exports.copyObject = copyObject;

const omitObject = (obj, omitKeys) => {
  if (!isObject(obj)) return obj;
  if (obj instanceof Array) return [...obj];
  const newObj = { ...obj
  };
  omitKeys.forEach(key => newObj[key] && delete newObj[key]);
  return newObj;
};

exports.omitObject = omitObject;