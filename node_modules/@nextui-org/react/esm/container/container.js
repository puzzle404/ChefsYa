"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _container = _interopRequireDefault(require("./container.styles"));

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const defaultProps = {
  gap: 2,
  xs: false,
  sm: false,
  md: false,
  lg: false,
  xl: false,
  responsive: true,
  fluid: false,
  wrap: 'wrap',
  as: 'div',
  display: 'block'
};

const Container = ({
  xs,
  sm,
  md,
  lg,
  xl,
  wrap,
  gap,
  as,
  display,
  justify,
  direction,
  alignItems,
  alignContent,
  children,
  responsive,
  fluid,
  css,
  ...props
}) => {
  const gapUnit = (0, _react.useMemo)(() => {
    return `calc(${gap} * $space$sm)`;
  }, [gap]);

  const getMaxWidth = () => {
    if (xs) return '$breakpoints$xs';
    if (sm) return '$breakpoints$sm';
    if (md) return '$breakpoints$md';
    if (lg) return '$breakpoints$lg';
    if (xl) return '$breakpoints$xl';
    return '';
  };

  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_container.default, {
    css: {
      px: gapUnit,
      maxWidth: getMaxWidth(),
      alignItems,
      alignContent,
      flexWrap: wrap,
      display: display,
      justifyContent: justify,
      flexDirection: direction,
      ...css
    },
    responsive: responsive,
    fluid: fluid,
    ...props,
    children: children
  });
};

Container.toString = () => '.nextui-container';

Container.defaultProps = defaultProps;

var _default = /*#__PURE__*/_react.default.memo(Container);

exports.default = _default;
module.exports = exports.default;